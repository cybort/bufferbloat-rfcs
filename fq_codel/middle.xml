<!-- This document was prepared using Pandoc2rfc, https://github.com/miekg/pandoc2rfc -->

  
<section title="Introduction" anchor="introduction">
  
  <t>
    <?rfc toc="yes"?> <?rfc symrefs="yes"?> <?rfc sortrefs="yes"?>
    <?rfc subcompact="no"?> <?rfc compact="yes"?> <?rfc comments="yes"?>
  </t>
  <t>
    This document presents a technique for using Pandoc syntax as a
    source format for documents in the Internet-Drafts (I-Ds) and
    Request for Comments (RFC) series.
  </t>
  <t>
    This version is adapted to work with <spanx style="verb">xml2rfc</spanx>
    version 2.x.
  </t>
  <t>
    Pandoc is an "almost plain text" format and therefor
    particularly well suited for editing RFC-like documents.
  </t>
  <t><list style="empty">
    <t>
      Note: this document is typeset in Pandoc and does not render
      completely correct when reading it on github.
    </t>
  </list></t>
  <t><list style="empty">
    <t>
      NB: this is mostly text to test Pandoc2rfc, the canonical
      documentation is
      <eref target="http://tools.ietf.org/html/draft-gieben-pandoc2rfc-01">draft-gieben-pandoc2rfc</eref>.
    </t>
  </list></t>
</section>
<section title="Pandoc to RFC" anchor="pandoc-to-rfc">
  
  <t><list style="empty">
    <t>
      Pandoc2rfc -- designed to do the right thing, until it doesn't.
    </t>
  </list></t>
  <t>
    When writing <xref target="RFC4641"/> we directly wrote the
    XML. Needless to say it was tedious even thought the XML of
    <eref target="http://xml.resource.org/experimental">xml2rfc</eref> is
    very "light". The
    <eref target="http://pypi.python.org/pypi/xml2rfc/">latest version of
    xml2rfc version 2 can be found here</eref>.
  </t>
  <t>
    During the last few years people have been developing markup
    languages that are very easy to remember and type. These languages
    have become known as <spanx style="verb">almost plain text</spanx>-markup
    languages. One of the first was the
    <eref target="http://daringfireball.net/projects/markdown/">Markdown</eref>
    syntax. One that was developed later and incorporates Markdown and a
    number of extensions is
    <eref target="http://johnmacfarlane.net/pandoc/">Pandoc</eref>. The
    power of Pandoc also comes from the fact that it can be translated
    to numerous output formats, including, but not limited to: HTML,
    (plain) Markdown and <spanx style="verb">docbook</spanx> XML.
  </t>
  <t>
    So using Pandoc for writing RFCs seems like a sane choice. As
    <spanx style="verb">xml2rfc</spanx> uses XML, the easiest way would be to
    create <spanx style="verb">docbook</spanx> XML and transform that using XSLT.
    Pandoc2rfc does just that. The conversions are, in some way amusing,
    as we start off with (almost) plain text, use elaborate XML and end
    up with plain text again.
  </t>
  <figure anchor="fig:flow" align="center" title="This is an inline note for the above figure."><artwork>
+-------------------+   pandoc   +---------+  
| ALMOST PLAIN TEXT |   ------&gt;  | DOCBOOK |  
+-------------------+            +---------+  
              |                       |
non-existent  |                       | xsltproc
  faster way  |                       |
              v                       v
      +------------+    xml2rfc  +---------+ 
      | PLAIN TEXT |  &lt;--------  | XML2RFC | 
      +------------+             +---------+ 
</artwork></figure>
  <t>
    
  </t>
  <t>
    The XML generated (the output after the <spanx style="verb">xsltproc</spanx>
    step in <xref target="fig:flow"/>) is suitable for inclusion
    in either the <spanx style="verb">middle</spanx> or <spanx style="verb">back</spanx>
    section of an RFC. The simplest way is to create a template XML file
    and include the appropriate XML:
  </t>
  <figure anchor="fig:template" align="center" title="A minimal template.xml."><artwork>
&lt;?xml version='1.0' ?&gt;
&lt;!DOCTYPE rfc SYSTEM 'rfc2629.dtd' [
&lt;!ENTITY pandocMiddle PUBLIC '' 'middle.xml'&gt;
&lt;!ENTITY pandocBack   PUBLIC '' 'back.xml'&gt;
]&gt;

&lt;rfc ipr='trust200902' docName='draft-gieben-pandoc-rfcs-02'&gt;
 &lt;front&gt;
    &lt;title&gt;Writing I-Ds and RFCs using Pandoc v2&lt;/title&gt;
&lt;/front&gt;

&lt;middle&gt;
    &amp;pandocMiddle;
&lt;/middle&gt;

&lt;back&gt;
    &amp;pandocBack;
&lt;/back&gt;

&lt;/rfc&gt;
</artwork></figure>
  <t>
    
  </t>
  <t>
    See the Makefile for an example of this. In this case you need to
    edit 3 documents:
  </t>
  <t><list style="numbers">
    <t>
      
        middle.pdc - contains the main body of text;
      
    </t>
    <t>
      
        back.pdc - holds appendices and references;
      
    </t>
    <t>
      
        template.xml (probably a fairly static file);
      
    </t>
    <t>
      
        Reference the above template, see
        <xref target="fig:template"/>.
      
    </t>
  </list></t>
  <t>
    The draft (<spanx style="verb">draft.txt</spanx>) you are reading now, is
    automatically created when you call <spanx style="verb">make</spanx>. The
    homepage of Pandoc2rfc is
    <eref target="https://github.com/miekg/pandoc2rfc">this github
    repository</eref>.
  </t>
  <section title="Dependencies" anchor="dependencies">
    
    <t>
      It needs <spanx style="verb">xsltproc</spanx> and <spanx style="verb">pandoc</spanx>
      to be installed. See the
      <eref target="http://johnmacfarlane.net/pandoc/README.html">Pandoc
      user manual for the details</eref> on how to type in Pandoc
      style. And ofcourse <spanx style="verb">xml2rfc</spanx> version two.
    </t>
    <t>
      When using Pandoc2rfc consider adding the following sentence to an
      Acknowledgements section:
    </t>
    <figure><artwork>
 This document was produced using the Pandoc2rfc tool.
</artwork></figure>
  </section>
</section>
<section title="Starting a new project" anchor="starting-a-new-project">
  
  <t>
    When starting a new project with <spanx style="verb">pandoc2rfc</spanx>
    you'll need to copy the following files:
  </t>
  <t><list style="symbols">
    <t>
      
        <spanx style="verb">Makefile</spanx>
      
    </t>
    <t>
      
        <spanx style="verb">transform.xslt</spanx>
      
    </t>
    <t>
      
        And the above mentioned files:
      
      <list style="symbols">
        <t>
          
            <spanx style="verb">middle.pdc</spanx>
          
        </t>
        <t>
          
            <spanx style="verb">back.pdc</spanx>
          
        </t>
        <t>
          
            <spanx style="verb">template.xml</spanx>
          
        </t>
      </list>
    </t>
  </list></t>
  <t>
    After that you can start editing.
  </t>
</section>
<section title="Supported Features" anchor="supported-features">
  
  <t><list style="symbols">
    <t>
      
        Sections with an anchor and title attributes
        (<xref target="section"/>);
      
    </t>
    <t>
      
        Lists
      
      <list style="symbols">
        <t>
          
            style=symbols (<xref target="symbol"/>);
          
        </t>
        <t>
          
            style=numbers (<xref target="number"/>);
          
        </t>
        <t>
          
            style=empty (<xref target="empty"/>);
          
        </t>
        <t>
          
            style=format %i, use roman lowercase numerals,
            (<xref target="roman"/>);
          
        </t>
        <t>
          
            style=format (%d), use roman uppercase numerals
            (<xref target="roman"/>);
          
        </t>
        <t>
          
            style=letters (lower- and uppercase,
            <xref target="letter"/>);
          
        </t>
        <t>
          
            style=hanging (<xref target="hanging"/>);
          
        </t>
      </list>
    </t>
    <t>
      
        Figure/artwork with a title
        (<xref target="figureartwork"/>);
      
    </t>
    <t>
      
        Block quote this is converted to
        <spanx style="verb">&lt;list style="empty"&gt;</spanx>
        paragraph (<xref target="block-quote"/>);
      
    </t>
    <t>
      
        References
      
      <list style="symbols">
        <t>
          
            external (eref) (<xref target="external"/>);
          
        </t>
        <t>
          
            internal (xref) (<xref target="internal"/>), you can
            refer to:
          
          <list style="symbols">
            <t>
              
                section (handled by Pandoc, see
                <xref target="references"/>));
              
            </t>
          </list>
        </t>
      </list>
    </t>
    <t>
      
        Citations, by using internal references;
      
    </t>
    <t>
      
        Spanx style=verb, style=emph and style=strong
        (<xref target="spanx-styles"/>);
      
    </t>
    <t>
      
        Tables with an anchor and title
        (<xref target="tables"/>).
      
    </t>
  </list></t>
</section>
<section title="Unsupported Features" anchor="unsupported-features">
  
  <t><list style="symbols">
    <t>
      
        Lists inside a table (<spanx style="verb">xml2rfc</spanx> doesn't handle
        this);
      
    </t>
    <t>
      
        Pandoc markup in the caption for figures/artwork. Pandoc markup
        for table captions <spanx style="emph">is</spanx> supported;
      
    </t>
    <t>
      
        crefs: for comments (no input syntax available), use HTML
        comments: <spanx style="verb">&lt;!-- ... --&gt;</spanx>;
      
    </t>
  </list></t>
</section>
<section title="Acknowledgements" anchor="acknowledgements">
  
  <t>
    The following people have helped to make Pandoc2rfc what it is
    today: Benno Overeinder, Erlend Hamnaberg, Matthijs Mekking, Trygve
    Laugst√∏l.
  </t>
  <t>
    This document was prepared using Pandoc2rfc.
  </t>
</section>
<section title="Pandoc Constructs" anchor="pandoc-constructs">
  
  <t>
    So, what syntax do you need to use to get the correct output? Well,
    it  is
    <spanx style="emph">just</spanx> Pandoc. The best introduction to the
    Pandoc style is given in this
    <eref target="http://johnmacfarlane.net/pandoc/README.html">README
    from Pandoc itself</eref>.
  </t>
  <t>
    For convenience we list the most important ones in the following
    sections.
  </t>
  <section title="Paragraph" anchor="paragraph">
    
    <t>
      Paragraphs are separated with an empty line.
    </t>
  </section>
  <section title="Section" anchor="section">
    
    <t>
      Just use the normal sectioning commands available in Pandoc, for
      instance:
    </t>
    <figure><artwork>
# Section1 One
Bla
</artwork></figure>
    <t>
      Converts to:
      <spanx style="verb">&lt;section title="Section1 One" anchor="section1-one"&gt;</spanx>
      If you have another section that is also named "Section1
      One", that anchor will be called "section1-one-1",
      but <spanx style="emph">only</spanx> when the sections are in the
      <spanx style="emph">same</spanx> source file!
    </t>
    <t>
      Referencing the section is done with
      <spanx style="verb">see [](#section1-one)</spanx>, as in see
      <xref target="section"/>.
    </t>
  </section>
  <section title="List Styles" anchor="list-styles">
    
    <t>
      A good number of styles are supported.
    </t>
    <section title="Symbol" anchor="symbol">
      
      <figure><artwork>
A symbol list.

* Item one;
* Item two.
</artwork></figure>
      <t>
        Converts to
        <spanx style="verb">&lt;list style="symbol"&gt;</spanx>:
      </t>
      <t><list style="symbols">
        <t>
          
            Item one;
          
        </t>
        <t>
          
            Item two.
          
        </t>
      </list></t>
    </section>
    <section title="Number" anchor="number">
      
      <figure><artwork>
A numbered list.

1. Item one;
1. Item two.
</artwork></figure>
      <t>
        Converts to
        <spanx style="verb">&lt;list style="numbers"&gt;</spanx>:
      </t>
      <t><list style="numbers">
        <t>
          
            Item one;
          
        </t>
        <t>
          
            Item two.
          
        </t>
      </list></t>
    </section>
    <section title="Empty" anchor="empty">
      
      <t>
        Using the default list markers from Pandoc:
      </t>
      <figure><artwork>
A list using the default list markers.

#. Item one;
#. Item two.
</artwork></figure>
      <t>
        Converts to
        <spanx style="verb">&lt;list style="empty"&gt;</spanx>:
      </t>
      <t><list style="empty">
        <t>
          
            Item one;
          
        </t>
        <t>
          
            Item two.
          
        </t>
      </list></t>
    </section>
    <section title="Roman" anchor="roman">
      
      <t>
        Use the supported Pandoc syntax:
      </t>
      <figure><artwork>
ii. Item one;
ii. Item two.
</artwork></figure>
      <t>
        Converts to
        <spanx style="verb">&lt;list style="format %i."&gt;</spanx>:
      </t>
      <t><list style="format %i.">
        <t>
          
            Item one;
          
        </t>
        <t>
          
            Item two.
          
        </t>
      </list></t>
      <t>
        If you use uppercase Roman numerals, they convert to a different
        style:
      </t>
      <figure><artwork>
II. Item one;
II. Item two.
</artwork></figure>
      <t>
        Yields
        <spanx style="verb">&lt;list style="format (%d) "&gt;</spanx>:
      </t>
      <t><list style="format (%d)">
        <t>
          
            Item one;
          
        </t>
        <t>
          
            Item two.
          
        </t>
      </list></t>
    </section>
    <section title="Letter" anchor="letter">
      
      <t>
        A numbered list.
      </t>
      <figure><artwork>
a.  Item one;
b.  Item two.
</artwork></figure>
      <t>
        Converts to
        <spanx style="verb">&lt;list style="letters"&gt;</spanx>:
      </t>
      <t><list style="letters">
        <t>
          
            Item one;
          
        </t>
        <t>
          
            Item two.
          
        </t>
      </list></t>
      <t>
        Uppercasing the letters works too (note two spaces after the
        letter.
      </t>
      <figure><artwork>
A.  Item one;
B.  Item two.
</artwork></figure>
      <t>
        Becomes:
      </t>
      <t><list style="format %C.">
        <t>
          
            Item one;
          
        </t>
        <t>
          
            Item two.
          
        </t>
      </list></t>
    </section>
    <section title="Hanging" anchor="hanging">
      
      <t>
        This is more like a description list, so we need to use:
      </t>
      <figure><artwork>
First item that needs clarification:

:   Explanation one
More stuff, because item is difficult to explain.
* item1
* item2

Second item that needs clarification:

:   Explanation two
</artwork></figure>
      <t>
        Converts to:
        <spanx style="verb">&lt;list style="hanging"&gt;</spanx> and
        <spanx style="verb">&lt;t hangText="First item that..."&gt;</spanx>
      </t>
      <t>
        If you want a newline after the hangTexts, search for the string
        <spanx style="verb">OPTION</spanx> in <spanx style="verb">transform.xsl</spanx>
        and uncomment it.
      </t>
    </section>
  </section>
  <section title="Figure/Artwork" anchor="figureartwork">
    
    <t>
      Indent the paragraph with 4 spaces.
    </t>
    <figure><artwork>
Like this
</artwork></figure>
    <t>
      Converts to: <spanx style="verb">&lt;figure&gt;&lt;artwork&gt; ...</spanx>
    </t>
  </section>
  <section title="Block Quote" anchor="block-quote">
    
    <t>
      Any paragraph like:
    </t>
    <figure><artwork>
&gt; quoted text
</artwork></figure>
    <t>
      Converts to:
      <spanx style="verb">&lt;t&gt;&lt;list style="empty"&gt; ...</spanx>
      paragraph, making it indented.
    </t>
  </section>
  <section title="References" anchor="references">
    
    <section title="External" anchor="external">
      
      <t>
        Any reference like:
      </t>
      <figure><artwork>
[Click here](URI)
</artwork></figure>
      <t>
        Converts to:
        <spanx style="verb">&lt;ulink target="URI"&gt;Click here ...</spanx>
      </t>
    </section>
    <section title="Internal" anchor="internal">
      
      <t>
        Any reference like:
      </t>
      <figure><artwork>
[Click here](#localid)
</artwork></figure>
      <t>
        Converts to:
        <spanx style="verb">&lt;link target="localid"&gt;Click here ...</spanx>
      </t>
      <t>
        For referring to RFCs (for which you manually need add the
        reference source in the template, with an external XML entity),
        you can just use:
      </t>
      <figure><artwork>
[](#RFC2119)
</artwork></figure>
      <t>
        And it does the right thing. Referencing sections is done with:
      </t>
      <figure><artwork>
See [](#pandoc-constructs)
</artwork></figure>
      <t>
        The word 'Section' is inserted automatically: ... see
        <xref target="pandoc-constructs"/> ... For referencing
        figures/artworks see <xref target="figureartwork"/>. For
        referencing tables see <xref target="tables"/>.
      </t>
    </section>
  </section>
  <section title="Spanx Styles" anchor="spanx-styles">
    
    <t>
      The verb style can be selected with back-tics:
      <spanx style="verb">`text`</spanx> Converts to:
      <spanx style="verb">&lt;spanx style="verb"&gt; ...</spanx>
    </t>
    <t>
      And the emphasis style with asterisks: <spanx style="verb">*text*</spanx>
      or underscores: <spanx style="verb">_text_</spanx> Converts to:
      <spanx style="verb">&lt;spanx style="emph"&gt; ...</spanx>
    </t>
    <t>
      And the emphasis style with double asterisks:
      <spanx style="verb">**text**</spanx> Converts to:
      <spanx style="verb">&lt;spanx style="strong"&gt; ...</spanx>
    </t>
  </section>
  <section title="Tables" anchor="tables">
    
    <t>
      A table can be entered as:
    </t>
    <figure anchor="fig:table" align="center" title="A caption describing the figure describing the table."><artwork>
  Right     Left     Center   Default
  -------  ------ ----------   -------
   12     12        12           12 
  123     123       123         123
    1     1         1         1       

  ^[tab::A caption describing the table.]
</artwork></figure>
    <t>
      
    </t>
    <t>
      Is translated to <spanx style="verb">&lt;texttable&gt;</spanx> element in
      <spanx style="verb">xml2rfc</spanx>. You can choose multiple styles as
      input, but they all are converted to the same style (plain
      <spanx style="verb">&lt;texttable&gt;</spanx>) table in
      <spanx style="verb">xml2rfc</spanx>. The column alignment is copied over to
      the generated XML.
    </t>
  </section>
</section>
<section title="Usage guidelines" anchor="usage-guidelines">
  
  <section title="Working with multiple files" anchor="working-with-multiple-files">
    
    <t>
      As an author you will probably break up a draft in multiple files,
      each dealing with a subject or section. When doing so sections
      with the same title will clash with each other. Pandoc can deal
      with this situation, but only if the different sections are in the
      <spanx style="emph">same</spanx> file or processed in the same Pandoc
      run. Concatenating the different section files before processing
      them is a solution to this problem. You can, for instance, amend
      the <spanx style="verb">Makefile</spanx> and add something like this:
    </t>
    <figure><artwork>
allsections.pdc: section.pdc.1 section.pdc.2 section.pdc.3
        cat $@ &gt; allsections.pdc
</artwork></figure>
    <t>
      And then process <spanx style="verb">allsection.pdc</spanx> in the normal
      way.
    </t>
  </section>
  <section title="Setting the title" anchor="setting-the-title">
    
    <t>
      If you use double quotes in the documents title in the
      <spanx style="verb">docName</spanx> attribute, like:
    </t>
    <figure><artwork>
&lt;rfc ipr="trust200902" docName="draft-gieben-writing-rfcs-pandoc-02"&gt;
</artwork></figure>
    <t>
      The Makefile will pick this up automatically and make a symbolic
      link:
    </t>
    <figure><artwork>
draft-gieben-writing-rfcs-pandoc-00.txt -&gt; draft.txt
</artwork></figure>
    <t>
      This makes uploading the file to the i-d tracker a bit easier.
    </t>
  </section>
  <section title="Uploading the XML/txt" anchor="uploading-the-xmltxt">
    
    <t>
      The <spanx style="verb">draft.xml</spanx> target will generate an XML file
      with all XML included, so you can upload just one file to the I-D
      tracker.
    </t>
  </section>
  <section title="VIM syntax highlighting" anchor="vim-syntax-highlighting">
    
    <t>
      If you are a VIM user you might be interested in a syntax
      highlighting file (see <xref target="VIM"/>) that slightly
      lightens up your reading experience while viewing a draft.txt from
      VIM.
    </t>
  </section>
</section>
<section title="Security Considerations" anchor="security-considerations">
  
  <t>
    This document raises no security issues.
  </t>
</section>
<section title="IANA Considerations" anchor="iana-considerations">
  
  <t>
    This document has no actions for IANA.
  </t>
</section>

