=================================
Some Congestion Experienced (SCE)
=================================

A proposal for the ECT(1) codepoint.  This forms the foundational basis for the ELR (Explicit Load Regulation) proposal series.

Jonathan Morton <chromatix99@gmail.com>

---

RFC 3168 defines the lower two bits of the (former) TOS byte in the IPv4/6 header as the ECN field.  This may take four values: Not-ECT, ECT(0), ECT(1) or CE.  To quote:

   IPv4 TOS Byte and IPv6 Traffic Class Octet

   Description:  The registrations are identical for IPv4 and IPv6.

   Bits 0-5:  see Differentiated Services Field Codepoints Registry
           (http://www.iana.org/assignments/dscp-registry)

   Bits 6-7, ECN Field:

   Binary  Keyword                                  References
   ------  -------                                  ----------
     00     Not-ECT (Not ECN-Capable Transport)     [RFC 3168]
     01     ECT(1) (ECN-Capable Transport(1))       [RFC 3168]
     10     ECT(0) (ECN-Capable Transport(0))       [RFC 3168]
     11     CE (Congestion Experienced)             [RFC 3168]

Presently however, the ECT(1) codepoint goes essentially unused, with the Nonce Sum extension to ECN having not been implemented in practice (and now considered unnecessary and obsolete).  RFC-compliant senders do not emit ECT(1), and RFC-compliant middleboxes do not alter the field to ECT(1), while RFC-compliant receivers interpret ECT(1) identically to ECT(0).  These are useful properties which represent an opportunity for improvement.

Meanwhile, experience gained with AQM in the field suggests that it is difficult to maintain the desired 100% link utilisation, whilst simultaneously strictly minimising induced delay due to excess queue depth - irrespective of whether ECN is in use.  This leads to a reluctance amongst hardware vendors to implement the most effective AQM schemes because their headline benchmarks are throughput-based.

The underlying cause is the very sharp "multiplicative decrease" reaction required of transport protocols to congestion signalling (whether that be packet loss or CE marks), which tends to leave the congestion window significantly smaller than the ideal BDP when triggered at only slightly above the ideal value.  The availability of this sharp response is required to assure network stability (AIMD principle), but there is presently no standardised and backwards-compatible means of providing a less drastic signal.

Given the confluence of these circumstances, we propose as a solution the redefinition of ECT(1) as SCE, meaning "Some Congestion Experienced".  The above ECN-field codepoint table would then become:

   Binary  Keyword                                  References
   ------  -------                                  ----------
     00     Not-ECT (Not ECN-Capable Transport)     [RFC 3168]
     01     SCE (Some Congestion Experienced)       [TBD]
     10     ECT (ECN-Capable Transport)             [RFC 3168]
     11     CE (Congestion Experienced)             [RFC 3168]

This permits middleboxes implementing AQM to signal incipient congestion, below the threshold required to justify setting CE, by converting some proportion of ECT codepoints to SCE ("SCE marking").  Existing receivers will transparently ignore this new signal, and existing middleboxes will still be able to convert SCE to CE as they presently do for ECT, thus ensuring backwards compatibility.  Additionally, SCE-aware middleboxes will still produce CE markings as at present, retaining current behaviour with Classic ECN endpoints.

Permitted ECN codepoint replacements by middleboxes:

   	Not-ECT ->   MUST remain at Not-ECT.
   	ECT     ->   ECT or SCE or CE
   	SCE     ->   SCE or CE
   	CE      ->   MUST remain at CE.

In other words, for ECN-aware flows, the ECN marking of an individual packet MAY be increased by a middlebox to signal congestion, but MUST NOT be decreased, and packets MUST NOT be altered to appear to be ECN-aware if they were not originally, nor vice versa.  Note however that SCE in numerically less than ECT, but semantically greater, and the latter definition applies for this rule.

SCE-aware receivers and transport protocols must continue to apply the RFC 3168 interpretation of the CE codepoint, that is, to signal the sender to back off send rate to the same extent as if a packet loss were detected.  This maintains compatibility with existing middleboxes.

SCE-aware receivers and transport protocols should interpret the SCE codepoint as an indication of mild congestion, with the relative incidence of ECT and SCE codepoints received indicating the relative severity of such congestion, and respond accordingly by applying send rates intermediate between those resulting from a continuous sequence of ECT codepoints, and those resulting from a CE codepoint.

As a concrete example, consider a TCP transport implementing CUBIC congestion control.  This presently exhibits exponential cwnd growth during slow-start, polynomial cwnd growth in steady-state, and multiplicative decrease (by 40%) upon detecting a single CE marking or packet loss in one RTT cycle.  With SCE awareness, it might exit slow-start upon detecting a single SCE marking, switch from polynomial to Reno-linear cwnd growth when the SCE:ECT ratio exceeds 1:2, halt cwnd growth entirely when it exceeds 1:1, and implement a Reno-linear decline when it exceeds 2:1, in addition to retaining the sharp 40% decrease on detecting CE.  In ideal circumstances, this would result in the cwnd stabilising at a level which produces between 50% and 66% SCE marking at some bottleneck on the path.

Details of how to implement SCE awareness at the transport layer will be left to a separate proposal in the ELR series.

To maximise the benefit of SCE, middleboxes should be capable of producing SCE markings considerably earlier than they presently produce CE markings.  In particular, the ideal moment to signal the exit of TCP slow-start (which typically doubles the cwnd per RTT) is when the throughput of the flow reaches 50% of the bandwidth available for it.  At this point, however, traditional AQM implementations see only an empty queue and take no signalling action.

This is also a matter deserving more detailed attention in a separate proposal in the ELR series.

This document therefore limits its scope to proposing the redefinition of the ECT(1) codepoint as SCE, with some brief illustrations of how it may be used.

---

A brief note on ELR:

The name "Explicit Load Regulation" comes from the action of the Load Regulator in older types of diesel-electric locomotive.  This senses the torque load on the engine (through the amount of fuel injection needed to maintain constant speed) and adjusts the excitation of the main generator to hold engine torque constant.  A typical model of the 1960s has "fast up" and "fast down" segments to handle rapid changes in load, "slow up" and "slow down" segments for fine adjustments, and a "hold" segment for constant-speed cruising.

Until now, there has been no standardised equivalent to "hold" or "slow down" in TCP congestion control.  In Reno terms, the exponential growth of slow-start is "fast up", the linear growth of steady-state is "slow up", and the multiplicative-decrease in response to packet loss or a CE mark is "fast down".  Other loss-based TCPs, such as CUBIC, differ in quantitive detail but are qualitatively similar.

The result has been a system which inherently oscillates around some steady state instead of settling on it.  The send rate is at times too high and induces latency through building queues, and at other times too low and wastes path capacity.  ELR is an attempt to adjust this system into one which does settle into an ideal steady state.
