



Network Working Group                                          J. Morton
Internet-Draft                                           Bufferbloat.net
Updates: 3168 (if approved)                                D. Taeht, Ed.
Intended status: Standards Track                                TekLibre
Expires: September 10, 2019                                March 9, 2019


                        Explicit Load Regulation
                        draft-morton-taht-ELR-00

Abstract

   This memo outlines how the some congestion experienced (SGE) bit can
   be used as an earlier indicator of congestion than the ECN CE marking
   in several common AQM algoritms and reciever side transports.

   It is transparent, backward compatible upgrade to existing AQM
   algorithms such as RED/PIE/FQ_PIE/CODEL/FQ_CODEL, and newer protocols
   such as QUIC.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 10, 2019.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must



Morton & Taeht         Expires September 10, 2019               [Page 1]

Internet-Draft                     ELR                        March 2019


   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   3.  SGE flow diagram  . . . . . . . . . . . . . . . . . . . . . .   3
   4.  Altering AQM algorithms . . . . . . . . . . . . . . . . . . .   3
   5.  Improving sender side TCP algorithms  . . . . . . . . . . . .   3
   6.  Improving receiver side TCP handling  . . . . . . . . . . . .   3
   7.  Adding multi-bit congestion control to QUIC . . . . . . . . .   4
   8.  RTP changes . . . . . . . . . . . . . . . . . . . . . . . . .   4
   9.  ELR . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   4
   10. Implementation guidelines . . . . . . . . . . . . . . . . . .   4
   11. Related Work  . . . . . . . . . . . . . . . . . . . . . . . .   4
   12. IANA Considerations . . . . . . . . . . . . . . . . . . . . .   4
   13. Security Considerations . . . . . . . . . . . . . . . . . . .   4
   14. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   4
   15. Normative References  . . . . . . . . . . . . . . . . . . . .   4
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   5

1.  Terminology

   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD,
   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in this
   document, are to be interpreted as described in [RFC2119].

2.  Introduction

   at we don't _only_ have 2 bits to work with, but a whole sequence of
   packets carrying these 2-bit codepoints.  We can convey fine-grained
   information by setting codepoints stochastically or in a pattern,
   rather than by merely choosing one of the three available (ignoring
   Not-ECT).  The receiver can then observe the density of codepoints
   and report that to the sender.

   Which is more-or-less the premise of DCTCP.  However, DCTCP changes
   the meaning of CE, instead of making use of ECT(1), which I think is
   the big mistake that makes it undeployable.

   So, from the middlebox perspective, very little changes.  ECN-capable
   packets still carry ECT(0) or ECT(1).  You still set CE on ECT
   packets, or drop Non-ECT packets, to signal when a serious level of
   persistent queue has developed, so that the sender needs to back off
   a lot.  But if a less serious congestion condition exists, you can
   now signal _that_ by changing some proportion of ECT(0) codepoints to



Morton & Taeht         Expires September 10, 2019               [Page 2]

Internet-Draft                     ELR                        March 2019


   ECT(1), with the intention that senders either reduce their cwnd
   growth rate, halt growth entirely, or enter a gradual decline.  Those
   are three things that ECN cannot currently signal.

   This change is invisible to existing, RFC-compliant, deployed
   middleboxes and endpoints, so should be completely backwards-
   compatible and incrementally deployable in the network.  (The only
   thing it breaks is the optional ECN integrity RFC that, according to
   fairly recent measurements, literally nobody bothered implementing.)

   Through TCP Timestamps, both sender and receiver can know fairly
   precisely when a round-trip has occurred.  The receiver can use this
   information to calculate the ratio of ECT(0) and ECT(1) codepoints
   received in the most recent RTT.  A new TCP Option could replace TCP
   Timestamps and the two bytes of padding that usually go with it,
   allowing reporting of this ratio without actually increasing the size
   of the TCP header.  Large cwnds can be accommodated at the receiver
   by shifting both counters right until they both fit in a byte each;
   it is the ratio between them that is significant.

   It is then incumbent on the sender to do something useful with that
   information.  A reasonable idea would be to aim for a 1:1 ratio via
   an integrating control loop.  Receipt of even one ECT(1) signal might
   be considered grounds for exiting slow-start, while exceeding 1:2
   ratio should limit growth rate to "Reno linear" semantics
   (significant for CUBIC), and exceeding 2:1 ratio should trigger a
   "Reno linear" _decrease_ of cwnd.  Through all this, a single CE mark
   (reported in the usual way via ECE and CWR) still has the usual
   effect of a multiplicative decrease.

   That's my proposal.

3.  SGE flow diagram

   ECT(0) -> ECT(1) -> ECT(1) | ECT(0) (CE) -> DROP

4.  Altering AQM algorithms

   The existing CE_THRESHOLD portion of FQ_CODEL can be repurposed for
   this.

5.  Improving sender side TCP algorithms

6.  Improving receiver side TCP handling







Morton & Taeht         Expires September 10, 2019               [Page 3]

Internet-Draft                     ELR                        March 2019


7.  Adding multi-bit congestion control to QUIC

8.  RTP changes

9.  ELR

   A brief note on ELR:

   The name "Explicit Load Regulation" comes from the action of the Load
   Regulator in older types of diesel-electric locomotive.  This senses
   the torque load on the engine (through the amount of fuel injection
   needed to maintain constant speed) and adjusts the excitation of the
   main generator to hold engine torque constant.  A typical model of
   the 1960s has "fast up" and "fast down" segments to handle rapid
   changes in load, "slow up" and "slow down" segments for fine
   adjustments, and a "hold" segment for constant-speed cruising.

   Until now, there has been no standardised equivalent to "hold" or
   "slow down" in TCP congestion control.  In Reno terms, the
   exponential growth of slow-start is "fast up", the linear growth of
   steady-state is "slow up", and the multiplicative-decrease in
   response to packet loss or a CE mark is "fast down".  Other loss-
   based TCPs, such as CUBIC, differ in quantitive detail but are
   qualitatively similar.

   The result has been a system which inherently oscillates around some
   steady state instead of settling on it.  The send rate is at times
   too high and induces latency through building queues, and at other
   times too low and wastes path capacity.  ELR is an attempt to adjust
   this system into one which does settle into an ideal steady state.

10.  Implementation guidelines

11.  Related Work

12.  IANA Considerations

   There are no IANA considerations.

13.  Security Considerations

14.  Acknowledgements

15.  Normative References







Morton & Taeht         Expires September 10, 2019               [Page 4]

Internet-Draft                     ELR                        March 2019


   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

Authors' Addresses

   Jonathon Morton
   Bufferbloat.net
   PO Box
   San Francisco, Ca  94117
   USA

   Phone: +1
   Email: chromi@gmail.com


   David M. Taeht (editor)
   TekLibre
   20600 Aldercroft Heights Rd
   Los Gatos, Ca  95033
   USA

   Phone: +18312059740
   Email: dave@taht.net


























Morton & Taeht         Expires September 10, 2019               [Page 5]
